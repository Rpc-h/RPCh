/**
 * Dictionaries used to compress and decompress RPC keys and methods
 * more info: https://ethereum.org/en/developers/docs/apis/json-rpc/
 */

export const mainKeyCmprVal: Record<string, string> = {
  0: "id",
  1: "params",
  2: "method",
  3: "result",
  4: "error",
  5: "__jsonclass__",
  6: "version",
  7: "kwparams",
  8: "jsonrpc",
};

export const mainKeyValCmpr: Record<string, string> = {
  id: "0",
  params: "1",
  method: "2",
  result: "3",
  error: "4",
  __jsonclass__: "5",
  version: "6",
  kwparams: "7",
  jsonrpc: "8",
};

export const resultsOrParamsCmprVal: Record<string, string> = {
  0: "hash",
  1: "from",
  2: "to",
  3: "expiry",
  4: "sent",
  5: "ttl",
  6: "topics",
  7: "payload",
  8: "workProved",
  9: "difficulty",
  10: "extraData",
  11: "gasLimit",
  12: "gasUsed",
  // 13: "hash",
  14: "logsBloom",
  15: "miner",
  16: "mixHash",
  17: "nonce",
  18: "number",
  19: "parentHash",
  20: "receiptsRoot",
  21: "sha3Uncles",
  22: "size",
  23: "stateRoot",
  24: "timestamp",
  25: "totalDifficulty",
  26: "transactions",
  27: "transactionsRoot",
  28: "uncles",
  29: "blockHash",
  30: "blockNumber",
  // 31: "from",
  32: "gas",
  33: "gasPrice",
  // 34: "hash",
  35: "input",
  // 36: "nonce",
  // 37: "to",
  38: "transactionIndex",
  39: "value",
  40: "startingBlock",
  41: "currentBlock",
  42: "highestBlock",
  43: "logIndex",
  45: "removed",
  46: "contractAddress",
  47: "cumulativeGasUsed",
  48: "effectiveGasPrice",
  // 49: "from",
  // 50: "gasUsed",
  51: "logs",
  52: "address",
  53: "status",
  // 54: "to",
  55: "transactionHash",
  // 57: "transactionIndex",
  58: "type",
  60: "info",
  61: "maxPriorityFeePerGas",
  62: "maxFeePerGas",
  63: "data",
  64: "author",
  // 65: "difficulty",
  // 66: "extraData",
  // 67: "gasLimit",
  // 68: "gasUsed",
  // 69: "hash",
  // 71: "miner",
  // 72: "mixHash",
  // 73: "nonce",
  // 74: "number",
  // 75: "parentHash",
  // 76: "receiptsRoot",
  // 77: "sha3Uncles",
  // 78: "size",
  // 79: "stateRoot",
  // 80: "totalDifficulty",
  // 81: "timestamp",
  82: "baseFeePerGas",
  // 83: "transactions",
  // 84: "transactionsRoot",
  // 85: "uncles",
  86: "gasUsedRatio",
  87: "oldestBlock",
  88: "reward",
  89: "accountProof",
  90: "balance",
  91: "codeHash",
  // 92: "nonce",
  93: "storageHash",
  94: "storageProof",
  95: "code",
  96: "name",
  97: "message",
  98: "error",
  99: "text",
};

export const resultsOrParamsValCmpr: Record<string, string> = {
  hash: "0",
  from: "1",
  to: "2",
  expiry: "3",
  sent: "4",
  ttl: "5",
  topics: "6",
  payload: "7",
  workProved: "8",
  difficulty: "9",
  extraData: "10",
  gasLimit: "11",
  gasUsed: "12",
  // "hash": "13 ",
  logsBloom: "14",
  miner: "15",
  mixHash: "16",
  nonce: "17",
  number: "18",
  parentHash: "19",
  receiptsRoot: "20",
  sha3Uncles: "21",
  size: "22",
  stateRoot: "23",
  timestamp: "24",
  totalDifficulty: "25",
  transactions: "26",
  transactionsRoot: "27",
  uncles: "28",
  blockHash: "29",
  blockNumber: "30",
  // "from": "31 ",
  gas: "32",
  gasPrice: "33",
  // "hash": "34 ",
  input: "35",
  // "nonce": "36 ",
  // "to": "37 ",
  transactionIndex: "38",
  value: "39",
  startingBlock: "40",
  currentBlock: "41",
  highestBlock: "42",
  logIndex: "43",
  removed: "45",
  contractAddress: "46",
  cumulativeGasUsed: "47",
  effectiveGasPrice: "48",
  // "from": "49 ",
  // "gasUsed": "50 ",
  logs: "51",
  address: "52",
  status: "53",
  // "to": "54 ",
  transactionHash: "55",
  // "transactionIndex": "57 ",
  type: "58",
  info: "60",
  maxPriorityFeePerGas: "61",
  maxFeePerGas: "62",
  data: "63",
  author: "64",
  // "difficulty": "65 ",
  // "extraData": "66 ",
  // "gasLimit": "67 ",
  // "gasUsed": "68 ",
  // "hash": "69 ",
  // "miner": "71 ",
  // "mixHash": "72 ",
  // "nonce": "73 ",
  // "number": "74 ",
  // "parentHash": "75 ",
  // "receiptsRoot": "76 ",
  // "sha3Uncles": "77 ",
  // "size": "78 ",
  // "stateRoot": "79 ",
  // "totalDifficulty": "80 ",
  // "timestamp": "81 ",
  baseFeePerGas: "82",
  // "transactions": "83 ",
  // "transactionsRoot": "84 ",
  // "uncles": "85 ",
  gasUsedRatio: "86",
  oldestBlock: "87",
  reward: "88",
  accountProof: "89",
  balance: "90",
  codeHash: "91",
  // "nonce": "92 ",
  storageHash: "93",
  storageProof: "94",
  code: "95",
  name: "96",
  message: "97",
  error: "98",
  text: "99",
};

export const methodCmprVal: Record<number, string> = {
  0: "web3_clientVersion",
  1: "web3_sha3",
  2: "net_version",
  3: "net_listening",
  4: "net_peerCount",
  5: "eth_protocolVersion",
  6: "eth_syncing",
  7: "eth_chainId",
  8: "eth_mining",
  9: "eth_hashrate",
  10: "eth_gasPrice",
  11: "eth_accounts",
  12: "eth_blockNumber",
  13: "eth_getBalance",
  14: "eth_getStorageAt",
  15: "eth_getTransactionCount",
  16: "eth_getBlockTransactionCountByHash",
  17: "eth_getBlockTransactionCountByNumber",
  18: "eth_getUncleCountByBlockHash",
  19: "eth_getUncleCountByBlockNumber",
  20: "eth_getCode",
  21: "eth_sign",
  22: "eth_signTransaction",
  23: "eth_sendTransaction",
  24: "eth_sendRawTransaction",
  25: "eth_call",
  26: "eth_estimateGas",
  27: "eth_getBlockByHash",
  28: "eth_getBlockByNumber",
  29: "eth_getTransactionByHash",
  30: "eth_getTransactionByBlockHashAndIndex",
  31: "eth_getTransactionByBlockNumberAndIndex",
  32: "eth_getTransactionReceipt",
  33: "eth_getUncleByBlockHashAndIndex",
  34: "eth_getUncleByBlockNumberAndIndex",
  35: "eth_getCompilers",
  36: "eth_compileSolidity",
  37: "eth_compileLLL",
  38: "eth_compileSerpent",
  39: "eth_newFilter",
  40: "eth_newBlockFilter",
  41: "eth_newPendingTransactionFilter",
  42: "eth_uninstallFilter",
  43: "eth_getFilterChanges",
  44: "eth_getFilterLogs",
  45: "eth_getLogs",
  46: "eth_getWork",
  47: "eth_submitWork",
  48: "eth_submitHashrate",
  49: "db_putString",
  50: "db_getString",
  51: "db_putHex",
  52: "db_getHex",
  53: "shh_version",
  54: "shh_post",
  55: "shh_newIdentity",
  56: "shh_hasIdentity",
  57: "shh_newGroup",
  58: "shh_addToGroup",
  59: "shh_newFilter",
  60: "shh_uninstallFilter",
  61: "shh_getFilterChanges",
  62: "shh_getMessages",
  63: "eth_coinbase",
};

export const methodValCmpr: Record<string, string> = {
  web3_clientVersion: "0",
  web3_sha3: "1",
  net_version: "2",
  net_listening: "3",
  net_peerCount: "4",
  eth_protocolVersion: "5",
  eth_syncing: "6",
  eth_chainId: "7",
  eth_mining: "8",
  eth_hashrate: "9",
  eth_gasPrice: "10",
  eth_accounts: "11",
  eth_blockNumber: "12",
  eth_getBalance: "13",
  eth_getStorageAt: "14",
  eth_getTransactionCount: "15",
  eth_getBlockTransactionCountByHash: "16",
  eth_getBlockTransactionCountByNumber: "17",
  eth_getUncleCountByBlockHash: "18",
  eth_getUncleCountByBlockNumber: "19",
  eth_getCode: "20",
  eth_sign: "21",
  eth_signTransaction: "22",
  eth_sendTransaction: "23",
  eth_sendRawTransaction: "24",
  eth_call: "25",
  eth_estimateGas: "26",
  eth_getBlockByHash: "27",
  eth_getBlockByNumber: "28",
  eth_getTransactionByHash: "29",
  eth_getTransactionByBlockHashAndIndex: "30",
  eth_getTransactionByBlockNumberAndIndex: "31",
  eth_getTransactionReceipt: "32",
  eth_getUncleByBlockHashAndIndex: "33",
  eth_getUncleByBlockNumberAndIndex: "34",
  eth_getCompilers: "35",
  eth_compileSolidity: "36",
  eth_compileLLL: "37",
  eth_compileSerpent: "38",
  eth_newFilter: "39",
  eth_newBlockFilter: "40",
  eth_newPendingTransactionFilter: "41",
  eth_uninstallFilter: "42",
  eth_getFilterChanges: "43",
  eth_getFilterLogs: "44",
  eth_getLogs: "45",
  eth_getWork: "46",
  eth_submitWork: "47",
  eth_submitHashrate: "48",
  db_putString: "49",
  db_getString: "50",
  db_putHex: "51",
  db_getHex: "52",
  shh_version: "53",
  shh_post: "54",
  shh_newIdentity: "55",
  shh_hasIdentity: "56",
  shh_newGroup: "57",
  shh_addToGroup: "58",
  shh_newFilter: "59",
  shh_uninstallFilter: "60",
  shh_getFilterChanges: "61",
  shh_getMessages: "62",
  eth_coinbase: "63",
};
