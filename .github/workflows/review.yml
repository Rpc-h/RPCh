name: Review

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

concurrency:
  # find the branch name for 'pull_request' or on 'push' events
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  review-source-code:
    name: Review source code
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      # enable remote caching using turbo
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-rpch
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Review formatting
        run: yarn format

      - name: Review linting
        run: yarn lint

      - name: Review dependencies
        run: yarn depcheck

      - name: Run tests and coverage
        run: yarn test --ci

  review-dockerfiles:
    name: Review dockerfiles
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: dynamically get this list
        project:
          - exit-node
          - funding-service
          - discovery-platform
          - sandbox
        include:
          - project: exit-node
            directory: apps
          - project: funding-service
            directory: apps
          - project: discovery-platform
            directory: apps
          - project: sandbox
            directory: devkit

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build container image
        uses: "./.github/actions/build-container"
        with:
          dockerfile: "./${{ matrix.directory }}/${{ matrix.project }}/Dockerfile"
          image: "sitilge/${{ matrix.project }}"
          registry: "docker.io"
          user: ${{ secrets.CONTAINER_REGISTRY_USER }}
          secret: ${{ secrets.CONTAINER_REGISTRY_SECRET }}
          tag_with_latest: ${{ startsWith(github.ref, 'main') }}

  review-configuration:
    name: Review configuration
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Review licenses
        run: >
          find . -name 'package.json' -not -path "*/node_modules/*" \
            -exec jq --arg license 'LGPL-3.0' -r '.license == $license' {} +\
            | grep "false" && exit 1 || echo success

  review-e2e-test-results:
    needs:
      - review-source-code
      - review-dockerfiles
      - review-configuration
    name: Review E2E test results
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      # enable remote caching using turbo
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-rpch
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Run E2E tests
        run: yarn test:e2e

  # uncomment changeset publish is fixed https://github.com/changesets/changesets/issues/942
  # publish jobs require to be under branches release/**
  # publish-npm-packages:
  #   if: startsWith(github.head_ref, 'release/')
  #   needs:
  #     - review-source-code
  #     - review-dockerfiles
  #     - review-configuration
  #     - review-e2e-test-results
  #   name: Publish NPM packages
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   env:
  #     # enable remote caching using turbo
  #     TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Build
  #       uses: ./.github/actions/build-rpch
  #       env:
  #         TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #         TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  #     - name: Creating .npmrc
  #       run: |
  #         cat << EOF > "$HOME/.npmrc"
  #           //registry.npmjs.org/:_authToken=$NPM_TOKEN
  #         EOF
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  #     - name: Publish
  #       run: npx changeset publish
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
