# docker-compose file that allows you locally host
# the centralized apps that make RPCh work
# DO NOT USE IN PRODUCTION
# launches:
#   - 1 funding service
#   - 1 discovery platform
#   - 1 postgres DB
#   - 1 availability monitor
version: "3"

volumes:
  # postgres database
  postgres-data:

services:
  postgres-db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - sandbox-proxy
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # funding-service:
  #   build:
  #     dockerfile: apps/funding-service/Dockerfile
  #     context: ../../../
  #   depends_on:
  #     - postgres-db
  #   restart: unless-stopped
  #   ports:
  #     - "3010:3010"
  #   networks:
  #     - sandbox-proxy
  #   environment:
  #     - DEBUG=${DEBUG}
  #     - PORT=3010
  #     - SECRET_KEY=${FS_SECRET}
  #     - WALLET_PRIV_KEY=${FUNDING_SERVICE_PRIVATE_KEY}
  #     - DB_CONNECTION_URL=postgresql://postgres:postgres@postgres-db:5432
  #     - FORCE_CHAIN_ID=31337
  #     - FORCE_RPC_URL=${RPC_PROVIDER}
  #     - FORCE_SMART_CONTRACT_ADDRESS=${FORCE_SMART_CONTRACT_ADDRESS}

  discovery-platform:
    build:
      dockerfile: apps/discovery-platform/Dockerfile
      context: ../../../
    depends_on:
      - postgres-db
    restart: unless-stopped
    ports:
      - "3020:3020"
    networks:
      - sandbox-proxy
    environment:
      - DEBUG=${DEBUG}
      - URL=http://127.0.0.1:3020
      - PORT=3020
      - DATABASE_URL=postgresql://postgres:postgres@postgres-db:5432
      - FUNDING_SERVICE_URL=http://funding-service:3010
      - AVAILABILITY_MONITOR_URL=http://availability-monitor:3050
      - SKIP_CHECK_COMMITMENT=${SKIP_CHECK_COMMITMENT}
      - ADMIN_SECRET=${ADMIN_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - RUNNING_IN_SANDBOX=${RUNNING_IN_SANDBOX}
      - DISCOVERY_PLATFORM_ACCESS_TOKEN=${DISCOVERY_PLATFORM_ACCESS_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}

  availability-monitor:
    build:
      dockerfile: apps/availability-monitor/Dockerfile
      context: ../../../
    depends_on:
      - postgres-db
    restart: unless-stopped
    ports:
      - "9080:9080"
    networks:
      - sandbox-proxy
    environment:
      - DEBUG=${DEBUG}
      - PORT=9080
      - DATABASE_URL=postgresql://postgres:postgres@postgres-db:5432

# we create a proxy to the sandbox
# network created in 'nodes-docker-compose'
networks:
  sandbox-proxy:
    name: sandbox
    external: true
