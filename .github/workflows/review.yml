name: Review

on:
  push:
    branches: [main]
    tags:
      - '**'
  pull_request:
    types: [opened, synchronize]

concurrency:
  # find the branch name for 'pull_request' or on 'push' events
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  review-source-code:
    name: Review source code
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      # enable remote caching using turbo
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      # required by unit tests
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-rpch
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Review linting
        run: yarn lint:ci

      - name: Review formatting
        run: yarn format:ci

      - name: Review dependencies
        # TODO: update ethers to v6 in RPCh SDK to remove the ignore-path
        run: yarn depcheck --ignore-path="examples"

      - name: Run tests and coverage
        run: yarn test
        env:
          TESTING_DB_CONNECTION_STRING: postgres://postgres:postgres@localhost:5432/postgres

  container-image:
    name: Build and push container image
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: dynamically get this list
        project:
          - discovery-platform
          - rpc-server
          - availability-monitor
        include:
          - project: discovery-platform
            directory: apps
          - project: availability-monitor
            directory: apps
          - project: rpc-server
            directory: apps

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get docker tag
        id: docker-tag
        run: |
          main_version=$(jq -r '.version' apps/${{ matrix.project }}/package.json)
          pr_number=${{ github.event.pull_request.number }}
          if [ ! -z "$pr_number" ]; then
            commit_short_sha=$(git rev-parse --short "${COMMIT_SHA:-HEAD}")
            docker_tag="${main_version}-pr.${pr_number}-commit.${commit_short_sha}"
            echo "DOCKER_TAG=${docker_tag}" >> $GITHUB_OUTPUT
          else
            echo "DOCKER_TAG=${main_version}" >> $GITHUB_OUTPUT
          fi
        env:
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: hoprassociation
          install_components: beta

      - name: Login Google Container Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          push: true
          file: "./${{ matrix.directory }}/${{ matrix.project }}/Dockerfile"
          tags: |
            europe-west3-docker.pkg.dev/hoprassociation/docker-images/${{ matrix.project }}:${{ steps.docker-tag.outputs.DOCKER_TAG }}

  review-configuration:
    name: Review configuration
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Review licenses
        run: >
          find . -name 'package.json' -not -path "*/node_modules/*" \
            -exec jq --arg license 'LGPL-3.0' -r '.license == $license' {} +\
            | grep "false" && exit 1 || echo success

  review-e2e-test-results:
    needs:
      - review-source-code
      - container-image
      - review-configuration
    name: Review E2E test results
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      # enable remote caching using turbo
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-rpch
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Run E2E tests
        run: yarn test:e2e

  # uncomment changeset publish is fixed https://github.com/changesets/changesets/issues/942
  # publish jobs require to be under branches release/**
  # publish-npm-packages:
  #   if: startsWith(github.head_ref, 'release/')
  #   needs:
  #     - review-source-code
  #     - review-dockerfiles
  #     - review-configuration
  #     - review-e2e-test-results
  #   name: Publish NPM packages
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   env:
  #     # enable remote caching using turbo
  #     TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Build
  #       uses: ./.github/actions/build-rpch
  #       env:
  #         TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #         TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  #     - name: Creating .npmrc
  #       run: |
  #         cat << EOF > "$HOME/.npmrc"
  #           //registry.npmjs.org/:_authToken=$NPM_TOKEN
  #         EOF
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  #     - name: Publish
  #       run: npx changeset publish
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
