# docker-compose file that allows you locally host the RPCh ecosystem
# DO NOT USE IN PRODUCTION
# launches:
#   - 5 HOPRd nodes (with interconnected HOPR channels)
#   - 3 exit nodes (connected to HOPRd nodes 1,2,3,4,5)
#   - 1 funding service
#   - 1 discovery platform
version: "3"

volumes:
  # hoprd node identity files
  pluto-data:
  # exit node identity files
  exit-node-data:
  # postgres database
  postgres-data:

x-exit-service: &exit
  build:
    dockerfile: apps/exit-node/Dockerfile
    context: ../../
  restart: unless-stopped
  volumes:
    - exit-node-data:/tmp
  depends_on:
    - pluto
  command: "node apps/exit-node/build/index.js"

services:
  postgres-db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  pluto:
    image: gcr.io/hoprassociation/hopr-pluto:v1.90.68@sha256:aa32cf496307a2f92d6aa965913e6e1c156b2bd5c9b41ae3657c9dfdf1d8c651
    restart: unless-stopped
    volumes:
      - pluto-data:/tmp
    ports:
      # mapping admin and api ports to localhost for app developers to access
      # the admin UI more easily
      - "13301-13305:13301-13305"
      - "19501-19505:19501-19505"
      # local RPC port
      - "8545:8545"
    environment:
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
  funding-service:
    build:
      dockerfile: apps/funding-service/Dockerfile
      context: ../../
    depends_on:
      - postgres-db
      - pluto
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - WALLET_PRIV_KEY=${WALLET_PRIV_KEY}
      - DB_CONNECTION_URL=${DB_CONNECTION_URL}
      - SMART_CONTRACT_ADDRESS=${SMART_CONTRACT_ADDRESS}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13301/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
    command: "eval $(node ./scripts/create-and-fund-wallet.js) && node apps/funding-service/build/index.js"
  exit-1:
    <<: *exit
    environment:
      - DEBUG=${DEBUG}
      - HOPRD_API_ENDPOINT=http://pluto:13301
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - RPCH_PASSWORD=${RPCH_PASSWORD}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13301/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
  exit-2:
    <<: *exit
    environment:
      - DEBUG=${DEBUG}
      - HOPRD_API_ENDPOINT=http://pluto:13302
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - RPCH_PASSWORD=${RPCH_PASSWORD}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13302/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
  exit-3:
    <<: *exit
    environment:
      - DEBUG=${DEBUG}
      - HOPRD_API_ENDPOINT=http://pluto:13303
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - RPCH_PASSWORD=${RPCH_PASSWORD}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13303/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
  exit-4:
    <<: *exit
    environment:
      - DEBUG=${DEBUG}
      - HOPRD_API_ENDPOINT=http://pluto:13304
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - RPCH_PASSWORD=${RPCH_PASSWORD}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13304/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
  exit-5:
    <<: *exit
    environment:
      - DEBUG=${DEBUG}
      - HOPRD_API_ENDPOINT=http://pluto:13305
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - RPCH_PASSWORD=${RPCH_PASSWORD}
    entrypoint:
      [
        "/bin/wait-for",
        "http://${HOPRD_API_TOKEN}@pluto:13305/api/v2/account/addresses",
        "-t",
        "300",
        "--",
        "/sbin/tini",
        "--",
      ]
